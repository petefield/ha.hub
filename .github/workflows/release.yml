name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup .NET Core 5
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.100-rc.1.20452.10

      - name: Setup .NET Core 3
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.4
        with:
          versionSpec: "5.3.x"

      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.4

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build -p:Version=${{ steps.gitversion.outputs.fullsemver }} --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal

      - name: Publish
        run: dotnet publish ./Api/ha.api.web.csproj --configuration Release --verbosity normal --output ./published-output

      - run: |
          cd ./published-output && zip ../api-server.zip -r ./

      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: api-server
          path: ./api-server.zip

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.gitversion.outputs.fullsemver }}
          release_name: v${{ steps.gitversion.outputs.fullsemver }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_name: api-server.zip
          asset_path: ./api-server.zip
          asset_content_type: application/zip
